{"summary":"<h2 id=\"1-领域建模\"><a href=\"#1-领域建模\" class=\"headerlink\" title=\"1. 领域建模\"></a>1. 领域建模</h2><blockquote>\n<p>References from Wiki: </p>\n<p>A domain model is a system of abstractions that describes selected aspects of a sphere of knowledge, influence or activity (a domain<a href=\"https://en.wikipedia.org/wiki/Domain_model#cite_note-3\" target=\"_blank\" rel=\"noopener\">[3]</a>). The model can then be used to solve problems related to that domain. The domain model is a representation of meaningful real-world concepts pertinent to the domain that need to be modelled in software. The concepts include the data involved in the business and rules the business uses in relation to that data.</p>\n<p>A domain model generally uses the vocabulary of the domain, thus allowing a representation of the model to be communicated to non-technical stakeholders.</p>\n<p>领域模型是描述知识领域，影响领域或活动领域（领域）的抽象系统。该模型可以用来解决与该域相关的问题。领域模型是与需要在软件中建模的领域相关的有意义的现实世界概念的表示。这些概念包括涉及业务的数据和业务使用的与该数据相关的规则。<br>领域模型通常使用领域的词汇表，从而允许将模型的表示传达给非技术利益相关者。</p>\n</blockquote>\n<ul>\n<li>a. 阅读 Asg_RH 文档，按用例构建领域模型。<ul>\n<li>按 Task2 要求，请使用工具 UMLet，截图格式务必是 png 并控制尺寸</li>\n<li>说明：请不要受 PCMEF 层次结构影响。你需要识别实体（E）和 中介实体（M，也称状态实体）<ul>\n<li>在单页面应用（如 vue）中，E 一般与数据库构建有关， M 一般与 <a href=\"https://cn.vuejs.org/v2/guide/state-management.html\" target=\"_blank\" rel=\"noopener\">store 模式</a> 有关</li>\n<li>在 java web 应用中，E 一般与数据库构建有关， M 一般与 session 有关</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p> <a href=\"http://blog.zhanzy.xyz/2018/04/11/UML绘图学习/\" target=\"_blank\" rel=\"noopener\">Asg_RH 用例图回顾</a></p>\n<p><a href=\"http://umlet.com/changes.htm\" target=\"_blank\" rel=\"noopener\">UMLet下载</a></p>\n<p>UMLet usage:  <code>cd UMLet &amp;&amp; bash umlet.sh # Linux and Unix bash shell command</code></p>\n</blockquote>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>用例</th>\n<th>领域模型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Search hotel  by city</td>\n<td><img src=\"/2018/04/28/领域建模与数据库建模实践/search_hotel.png\" alt=\"search_hotel\"></td>\n</tr>\n<tr>\n<td>Make reservation with hotel and room type</td>\n<td><img src=\"/2018/04/28/领域建模与数据库建模实践/create_reservation.png\" alt=\"create_reservation\"></td>\n</tr>\n<tr>\n<td>Pay for basket with reservation</td>\n<td><img src=\"/2018/04/28/领域建模与数据库建模实践/payment.png\" alt=\"payment\"></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"2-数据库建模\"><a href=\"#2-数据库建模\" class=\"headerlink\" title=\"2. 数据库建模\"></a>2. 数据库建模</h2><blockquote>\n<p>References from Wiki:</p>\n<p>A <strong>database model</strong> is a type of <a href=\"https://en.wikipedia.org/wiki/Data_model\" target=\"_blank\" rel=\"noopener\">data model</a> that determines the logical structure of a <a href=\"https://en.wikipedia.org/wiki/Database\" target=\"_blank\" rel=\"noopener\">database</a> and fundamentally determines in which manner <a href=\"https://en.wikipedia.org/wiki/Data\" target=\"_blank\" rel=\"noopener\">data</a> can be stored, organized and manipulated. The most popular example of a database model is the <a href=\"https://en.wikipedia.org/wiki/Relational_model\" target=\"_blank\" rel=\"noopener\">relational model</a>, which uses a table-based format.</p>\n<p>数据库模型是一种数据模型，它决定了数据库的逻辑结构，从根本上决定了数据可以存储，组织和操作的方式。数据库模型最流行的例子是关系模型，它使用基于表格的格式。</p>\n</blockquote>\n<ul>\n<li>b. 数据库建模(E-R 模型)<ul>\n<li>按 Task 3 要求，给出系统的 E-R 模型（数据逻辑模型）</li>\n<li>建模工具 PowerDesigner（简称PD） 或开源工具 <a href=\"http://www.codebydesign.com/\" target=\"_blank\" rel=\"noopener\">OpenSystemArchitect</a></li>\n<li>不负责的链接 <a href=\"http://www.cnblogs.com/mcgrady/archive/2013/05/25/3098588.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/mcgrady/archive/2013/05/25/3098588.html</a></li>\n<li>导出 Mysql 物理数据库的脚本</li>\n<li>简单叙说 数据库逻辑模型 与 领域模型 的异同</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>下面是用Mysql Workbench绘制的ER图</li>\n</ol>\n<p><img src=\"/2018/04/28/领域建模与数据库建模实践/ER.png\" alt=\"ER\"></p>\n<ol>\n<li>Mysql Workbench导出的脚本：<a href=\"assets/Asg_Hotel.sql\">Asg_Hotel.sql</a></li>\n</ol>\n<ol>\n<li>比较数据逻辑模型和领域建模异同</li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>同</th>\n<th>异</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数据逻辑模型和领域模型</td>\n<td>1. 以识别主体为绘制的开端，以填充属性为结束<br>2. 主体对象之间都是用一条直线表示关联关系</td>\n<td>1. 数据逻辑模型包含更多接近底层数据类型的内容，领域模型则更加语义化一些，没有定义数据类型<br>2. 数据逻辑模型对一对多、多对多的情况的描绘可能需要中间实体，领域模型可以直接表示一对多的情况</td>\n</tr>\n</tbody>\n</table>\n</div>\n"}