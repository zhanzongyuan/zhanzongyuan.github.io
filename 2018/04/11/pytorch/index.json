{"summary":"<h2 id=\"1-&#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;\"><a href=\"#1-&#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;\" class=\"headerlink\" title=\"1. &#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;\"></a>1. &#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;</h2><ol>\n<li><strong>torch.Tensor</strong></li>\n</ol>\n<p>&#x7C7B;&#x4F3C;tensorflow&#xFF0C;&#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x662F;torch.Tensor&#xFF0C;&#x5185;&#x90E8;&#x652F;&#x6301;&#x4E0D;&#x540C;&#x7EF4;&#x5EA6;&#x3001;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x7684;&#x5F20;&#x91CF;&#x3002;</p>\n<ul>\n<li>&#x652F;&#x6301;&#x64CD;&#x4F5C;<ul>\n<li>&#x652F;&#x6301;&#x57FA;&#x672C;&#x7684;&#x7B97;&#x672F;&#x8FD0;&#x7B97;&#x64CD;&#x4F5C;</li>\n<li>numpy&#x76F8;&#x4E92;&#x8F6C;&#x6362;</li>\n<li>&#x8C03;&#x7528;cuda&#xFF08;GPU&#xFF09;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-&#x68AF;&#x5EA6;&#x6A21;&#x5757;\"><a href=\"#2-&#x68AF;&#x5EA6;&#x6A21;&#x5757;\" class=\"headerlink\" title=\"2. &#x68AF;&#x5EA6;&#x6A21;&#x5757;\"></a>2. &#x68AF;&#x5EA6;&#x6A21;&#x5757;</h2><ol>\n<li><strong>autograd</strong></li>\n</ol>\n<p>&#x7528;&#x4E8E;&#x81EA;&#x52A8;&#x8BA1;&#x7B97;&#x5173;&#x4E8E;Tensor&#x7B97;&#x672F;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x5404;&#x4E2A;&#x68AF;&#x5EA6;&#xFF0C;&#x662F;pytorch&#x7684;&#x6838;&#x5FC3;&#x5E93;</p>\n<ol>\n<li><strong>autograd.Variable</strong></li>\n</ol>\n<p><img src=\"/2018/04/11/pytorch/Variable.png\" alt=\"Variable\"></p>\n<ul>\n<li>data<ul>\n<li>&#x53D8;&#x91CF;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF1A;torch.Variable</li>\n</ul>\n</li>\n<li>grad<ul>\n<li>&#x5F53;&#x524D;&#x53D8;&#x91CF;&#x5BF9;&#x67D0;&#x4E2A;&#x4E4B;&#x524D;&#x53D8;&#x91CF;&#x7B97;&#x5F97;&#x7684;&#x68AF;&#x5EA6;</li>\n</ul>\n</li>\n<li>grad_fn<ul>\n<li>&#x6307;&#x5411;&#x5F53;&#x524D;&#x53D8;&#x91CF;&#x4EA7;&#x751F;&#x65F6;&#x6240;&#x64CD;&#x4F5C;&#x7684;&#x51FD;&#x6570;&#x8BB0;&#x5F55;&#xFF0C;&#x7528;&#x4E8E;&#x5411;&#x524D;&#x56DE;&#x6EAF;&#x627E;&#x4E00;&#x7CFB;&#x5217;&#x64CD;&#x4F5C;&#x8FC7;&#x7A0B;</li>\n<li>&#x731C;&#x6D4B;&#xFF1A;&#x6BCF;&#x6B21;Tensor&#x7684;&#x53D8;&#x91CF;&#x64CD;&#x4F5C;&#x4F1A;&#x4FDD;&#x7559;&#x4E00;&#x4E2A;&#x8FD0;&#x7B97;&#x5730;&#x5740;&#xFF08;&#x5730;&#x5740;&#x91CC;&#x9762;&#x6709;&#x8F93;&#x5165;&#x3001;&#x8F93;&#x51FA;&#x3001;&#x64CD;&#x4F5C;&#x65B9;&#x6CD5;&#xFF09;</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>autograd.Variable.backward()</strong></li>\n</ol>\n<blockquote>\n<p>&#x5F53;&#x524D;&#x53D8;&#x91CF;&#x662F;&#x901A;&#x8FC7;&#x4E00;&#x7CFB;&#x5217;&#x7684;Tensor&#x64CD;&#x4F5C;&#x4EA7;&#x751F;&#x7684;&#xFF0C;&#x8FC7;&#x7A0B;&#x4E2D;&#x6709;&#x8BB8;&#x591A;&#x53D8;&#x91CF;&#x53C2;&#x4E0E;&#xFF0C;&#x8BB8;&#x591A;&#x53D8;&#x91CF;&#x4EA7;&#x751F;</p>\n<p>&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x4E00;&#x7CFB;&#x5217;Tensor&#x64CD;&#x4F5C;&#x7684;&#x6700;&#x7EC8;&#x7ED3;&#x679C;&#xFF0C;&#x5F53;&#x524D;&#x53D8;&#x91CF;&#x5F53;&#x4F5C;&#x5B50;&#x53D8;&#x91CF;&#xFF0C;&#x4E4B;&#x524D;&#x53C2;&#x4E0E;&#x64CD;&#x4F5C;&#x53D8;&#x91CF;&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x7236;&#x53D8;&#x91CF;&#xFF0C;&#x66F4;&#x4E4B;&#x524D;&#x7684;&#x770B;&#x4F5C;&#x662F;&#x7956;&#x5148;&#x53D8;&#x91CF;&#xFF08;&#x7236;&#x53D8;&#x91CF;&#x76F8;&#x5BF9;&#x4E8E;&#x5B50;&#x53D8;&#x91CF;&#x800C;&#x8A00;&#x662F;&#x8F93;&#x5165;&#xFF0C;&#x5B50;&#x53D8;&#x91CF;&#x76F8;&#x5F53;&#x4E8E;&#x8F93;&#x51FA;&#xFF1A;&#x7956;&#x5148;&#x53D8;&#x91CF;&#x2014;$f<em>{&#x8FD0;&#x7B97;}$&#x2014;&gt;&#x7236;&#x53D8;&#x91CF;&#x2014;$f</em>{&#x8FD0;&#x7B97;}$&#x2014;&gt;&#x5B50;&#x53D8;&#x91CF;&#xFF09;</p>\n</blockquote>\n<ul>\n<li>backward()&#x53D1;&#x751F;&#x4E86;&#x4EC0;&#x4E48;<ul>\n<li>backward()&#x5219;&#x662F;&#x56DE;&#x6EAF;&#x8FD9;&#x4E00;&#x7CFB;&#x5217;&#x64CD;&#x4F5C;&#xFF0C;&#x901A;&#x8FC7;grad_fn&#x4F9D;&#x6B21;&#x5BFB;&#x627E;&#x4EA7;&#x751F;&#x8FD9;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x7236;&#x53D8;&#x91CF;&#x3001;&#x7956;&#x5148;&#x53D8;&#x91CF;&#xFF0C;&#x5E76;&#x901A;&#x8FC7;&#x6C42;&#x5BFC;&#xFF0C;&#x6C42;&#x5F97;&#x5F53;&#x524D;&#x5B50;&#x53D8;&#x91CF;&#x5BF9;&#x7236;&#x53D8;&#x91CF;&#x7684;&#x5BFC;&#x6570;&#xFF0C;&#x6C42;&#x5B50;&#x53D8;&#x91CF;&#x5BF9;&#x7956;&#x5148;&#x53D8;&#x91CF;&#x7684;&#x5BFC;&#x6570;&#xFF08;&#x7528;&#x94FE;&#x5F0F;&#x6CD5;&#x5219;&#xFF09;&#xFF0C;&#x8FD9;&#x4E2A;&#x5BFC;&#x6570;&#x5B58;&#x50A8;&#x5728;&#x5BF9;&#x5E94;&#x7684;&#x7236;&#x53D8;&#x91CF;&#x3001;&#x7956;&#x5148;&#x53D8;&#x91CF;&#x7684;gra&#x7684;&#x4E2D;</li>\n<li>&#x5728;&#x6C42;&#x5B8C;&#x81EA;&#x53D8;&#x91CF;&#x68AF;&#x5EA6;&#x540E;&#x56DE;&#x6EAF;&#x8FC7;&#x53BB;&#x7684;</li>\n</ul>\n</li>\n<li>grad&#x5305;&#x542B;&#x5565;<ul>\n<li><em>&#x7236;&#x53D8;&#x91CF;1</em>&#x7684;grad&#xFF1A;$\\frac {dy<em>{&#x5B50;&#x53D8;&#x91CF;}} {dx</em>{&#x7236;&#x53D8;&#x91CF;1}}$</li>\n<li><em>&#x7956;&#x5148;&#x53D8;&#x91CF;1</em>&#x7684;grad&#xFF1A;$\\frac {dy<em>{&#x5B50;&#x53D8;&#x91CF;}} {dx</em>{&#x7956;&#x5148;&#x53D8;&#x91CF;1}}$</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x642D;&#x5EFA;&#x5E93;\"><a href=\"#3-&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x642D;&#x5EFA;&#x5E93;\" class=\"headerlink\" title=\"3. &#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x642D;&#x5EFA;&#x5E93;\"></a>3. &#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x642D;&#x5EFA;&#x5E93;</h2><blockquote>\n<p> torch.nn&#x5E93;&#x662F;&#x7528;&#x4E8E;pytorch&#x7F51;&#x7EDC;&#x7684;&#x642D;&#x5EFA;</p>\n</blockquote>\n<ol>\n<li><strong>torch.nn.Module</strong></li>\n</ol>\n<p>&#x7F51;&#x7EDC;&#x7C7B;&#x578B;&#x7684;&#x57FA;&#x672C;&#x7236;&#x7C7B;&#xFF0C;&#x4E00;&#x822C;&#x7EE7;&#x627F;&#x8BE5;&#x7C7B;&#xFF0C;&#x642D;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x7F51;&#x7EDC;&#x7C7B;&#x578B;</p>\n<p>&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x7684;&#x901A;&#x8FC7;Module.parameters()&#xFF0C;&#x5728;&#x5FAA;&#x73AF;&#x4E2D;&#x8BBF;&#x95EE;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x6743;&#x91CD;&#x53D8;&#x91CF;</p>\n<ol>\n<li><strong>nn.* &#x7F51;&#x7EDC;&#x53D8;&#x91CF;&#x7C7B;&#x578B;</strong></li>\n</ol>\n<p>&#x901A;&#x8FC7;nn&#x53EF;&#x4EE5;&#x751F;&#x6210;&#x8BB8;&#x591A;&#x7F51;&#x7EDC;&#x76F8;&#x5173;&#x7684;&#x64CD;&#x4F5C;&#x7B97;&#x5B50;&#xFF0C;&#x5982;&#xFF1A;&#x5377;&#x79EF;&#x6838;&#xFF0C;&#x5168;&#x8FDE;&#x63A5;&#x6743;&#x91CD;&#xFF0C;&#x6C60;&#x5316;</p>\n<p>&#x8FD9;&#x4E9B;&#x7B97;&#x5B50;&#x5305;&#x62EC;&#x81EA;&#x5E26;&#x7684;&#x6570;&#x636E;&#x6743;&#x91CD;&#xFF08;&#x901A;&#x8FC7;parameters()&#x8BBF;&#x95EE;&#xFF09;&#xFF0C;&#x548C;&#x7279;&#x5B9A;&#x7684;&#x64CD;&#x4F5C;&#x51FD;&#x6570;</p>\n<ul>\n<li>nn.Linear<ul>\n<li>&#x7EBF;&#x6027;&#x6743;&#x91CD;&#x7B97;&#x5B50;&#xFF1A;&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;&#x5C3A;&#x5BF8;&#xFF0C;&#x5F53;&#x8F93;&#x5165;&#x5339;&#x914D;&#x5927;&#x5C0F;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5373;&#x53EF;&#x8FDB;&#x884C;&#x5168;&#x8FDE;&#x63A5;&#x8FD0;&#x7B97;</li>\n</ul>\n</li>\n<li>nn.Conv2d<ul>\n<li>&#x4E8C;&#x7EF4;&#x5377;&#x79EF;&#x7B97;&#x5B50;&#xFF1A;&#x521D;&#x59CB;&#x5316;&#x5377;&#x79EF;&#x6838;&#x5C3A;&#x5BF8;&#xFF0C;&#x5377;&#x79EF;&#x5F62;&#x5F0F;&#xFF08;padding&#xFF0C;stride&#xFF09;&#xFF0C;&#x5F53;&#x8F93;&#x5165;&#x5339;&#x914D;&#x5927;&#x5C0F;&#x6570;&#x636E;&#xFF0C;&#x53CA;&#x53EF;&#x5377;&#x79EF;&#x64CD;&#x4F5C;</li>\n</ul>\n</li>\n<li>nn.MaxPool2d<ul>\n<li>&#x4E8C;&#x7EF4;&#x6C60;&#x5316;&#x7B97;&#x5B50;&#xFF1A;&#x521D;&#x59CB;&#x5316;&#x6C60;&#x5316;&#x5C3A;&#x5BF8;&#xFF0C;&#x6C60;&#x5316;&#x5F62;&#x5F0F;&#xFF08;padding&#xFF0C;stride&#xFF09;&#xFF0C;&#x8F93;&#x5165;&#x5339;&#x914D;&#x5927;&#x5C0F;&#x6570;&#x636E;&#xFF0C;&#x5373;&#x53EF;&#x6C60;&#x5316;</li>\n</ul>\n</li>\n<li>nn.MSELoss<ul>\n<li>&#x5E73;&#x5747;&#x5E73;&#x65B9;&#x5DEE;&#x635F;&#x5931;&#x7B97;&#x5B50;&#xFF1A;&#x8BA1;&#x7B97;loss</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p> &#x6240;&#x6709;&#x7B97;&#x5B50;&#x5B9E;&#x4F8B;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x8F93;&#x5165;&#x4E00;&#x4E2A;autograd&#x53D8;&#x91CF;&#xFF0C;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;autograd&#x53D8;&#x91CF;</p>\n<p>&#x652F;&#x6301;batch&#x6570;&#x636E;&#x8F93;&#x5165;</p>\n</blockquote>\n<ol>\n<li>torch.optim&#x81EA;&#x52A8;&#x4F18;&#x5316;&#x6743;&#x503C;</li>\n</ol>\n<ul>\n<li>optim.SGD&#x6CE8;&#x518C;&#x8FD4;&#x56DE;&#x4F18;&#x5316;&#x5668;&#xFF08;&#x521D;&#x59CB;&#x5316;&#x4F18;&#x5316;&#x5668;&#x53D8;&#x91CF;&#x4EE5;&#x53CA;&#x5B66;&#x4E60;&#x7387;&#xFF09;</li>\n<li>optim.SGD.zero_grad()&#x6E05;&#x7A7A;&#x53D8;&#x91CF;&#x68AF;&#x5EA6;</li>\n<li>optim.SGD.step()&#x6267;&#x884C;&#x4F18;&#x5316;</li>\n</ul>\n<p>&#x5B98;&#x7F51;&#x5B9E;&#x4F8B;&#xFF1A;</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">from</span> torch.autograd <span class=\"keyword\">import</span> Variable</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.nn <span class=\"keyword\">as</span> nn</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.nn.functional <span class=\"keyword\">as</span> F</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Net</span><span class=\"params\">(nn.Module)</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        super(Net, self).__init__()</span><br><span class=\"line\">        <span class=\"comment\"># 1 input image channel, 6 output channels, 5x5 square convolution</span></span><br><span class=\"line\">        <span class=\"comment\"># kernel</span></span><br><span class=\"line\">        self.conv1 = nn.Conv2d(<span class=\"number\">1</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\">        self.conv2 = nn.Conv2d(<span class=\"number\">6</span>, <span class=\"number\">16</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\">        <span class=\"comment\"># an affine operation: y = Wx + b</span></span><br><span class=\"line\">        self.fc1 = nn.Linear(<span class=\"number\">16</span> * <span class=\"number\">5</span> * <span class=\"number\">5</span>, <span class=\"number\">120</span>)</span><br><span class=\"line\">        self.fc2 = nn.Linear(<span class=\"number\">120</span>, <span class=\"number\">84</span>)</span><br><span class=\"line\">        self.fc3 = nn.Linear(<span class=\"number\">84</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">forward</span><span class=\"params\">(self, x)</span>:</span></span><br><span class=\"line\">        <span class=\"comment\"># Max pooling over a (2, 2) window</span></span><br><span class=\"line\">        x = F.max_pool2d(F.relu(self.conv1(x)), (<span class=\"number\">2</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\">        <span class=\"comment\"># If the size is a square you can only specify a single number</span></span><br><span class=\"line\">        x = F.max_pool2d(F.relu(self.conv2(x)), <span class=\"number\">2</span>)</span><br><span class=\"line\">        x = x.view(<span class=\"number\">-1</span>, self.num_flat_features(x))</span><br><span class=\"line\">        x = F.relu(self.fc1(x))</span><br><span class=\"line\">        x = F.relu(self.fc2(x))</span><br><span class=\"line\">        x = self.fc3(x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">num_flat_features</span><span class=\"params\">(self, x)</span>:</span></span><br><span class=\"line\">        size = x.size()[<span class=\"number\">1</span>:]  <span class=\"comment\"># all dimensions except the batch dimension</span></span><br><span class=\"line\">        num_features = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> size:</span><br><span class=\"line\">            num_features *= s</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num_features</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">net = Net()</span><br><span class=\"line\">print(net)</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-&#x5206;&#x7C7B;&#x5668;&#x5B9E;&#x6218;\"><a href=\"#4-&#x5206;&#x7C7B;&#x5668;&#x5B9E;&#x6218;\" class=\"headerlink\" title=\"4. &#x5206;&#x7C7B;&#x5668;&#x5B9E;&#x6218;\"></a>4. &#x5206;&#x7C7B;&#x5668;&#x5B9E;&#x6218;</h2><ul>\n<li>torchvision.transforms&#xFF1A;&#x8BE5;&#x6A21;&#x5757;&#x63D0;&#x4F9B;&#x591A;&#x4E2A;&#x8F6C;&#x6362;&#x5668;<ul>\n<li>transforms.Compose&#xFF1A;&#x5C06;&#x591A;&#x4E2A;&#x8F6C;&#x6362;&#x5668;&#x4E32;&#x8054;&#x8D77;&#x6765;</li>\n<li>transforms.ToTensor&#xFF1A;Convert a <code>PIL Image</code> or <code>numpy.ndarray</code> to tensor.</li>\n<li>transforms.Normalize&#xFF1A;(<em>mean, std</em>)&#xFF0C;&#x5F52;&#x4E00;&#x5316;&#x56FE;&#x50CF;&#x4E09;&#x4E2A;&#x7EF4;&#x5EA6;&#xFF08;C&#xFF0C;W&#xFF0C;H&#xFF09;</li>\n</ul>\n</li>\n<li>torchvision.datasets<ul>\n<li>torchvision.datasets.CIFAR10&#xFF1A;&#x4E0B;&#x8F7D;&#x6570;&#x636E;&#x96C6;</li>\n<li>torch.utils.data.DataLoader&#xFF1A;&#x52A0;&#x8F7D;&#x6570;&#x636E;&#x96C6;</li>\n</ul>\n</li>\n<li>torch.nn.CrossEntropyLoss<ul>\n<li>&#x6559;&#x7A0B;&#x5546;&#x8BEF;&#x5DEE;&#xFF1F;</li>\n</ul>\n</li>\n</ul>\n<p>&#x2014;&#x672A;&#x5B8C;&#x5F85;&#x7EED;&#x2014;</p>\n"}