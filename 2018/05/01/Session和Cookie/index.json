{"summary":"<h2 id=\"1-Cookie\"><a href=\"#1-Cookie\" class=\"headerlink\" title=\"1. Cookie\"></a>1. Cookie</h2><p><strong>概念：</strong>  服务器和客户端直接维持状态的解决方案</p>\n<ul>\n<li>HTTP无状态：指的是每次客户端向服务器发送HTTP方法的时候，对于服务器而言都是一次新的操作，之前的操作不会对后面的操作有任何影响。都是把每个请求当作一个新的请求。</li>\n</ul>\n<blockquote>\n<p>打个比方：</p>\n<p>无状态：每次去同一家餐厅吃饭，无状态的店员都把你当作新客人，每次都重新推荐菜品</p>\n<p>有状态：每次去同一家餐厅吃饭，有状态的店员对你之前来过有印象，就当作老顾客，能熟络的叫出你的名字，甚至都知道你喜欢的哪几道菜</p>\n</blockquote>\n<p><strong>目的：</strong>Cookie的出现就是为了简单的保留你的登录状态，而不用每次都重复登录</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>状态（历史操作记录，Cookie）数据保留在客户端</li>\n<li>分为会话Cookie和持久Cookie</li>\n</ul>\n<p><strong>机制：</strong></p>\n<p><img src=\"/2018/05/01/Session和Cookie/Cookie.png\" alt=\"Cookie\"></p>\n<h2 id=\"2-Session\"><a href=\"#2-Session\" class=\"headerlink\" title=\"2. Session\"></a>2. Session</h2><blockquote>\n<p>Session同样是解决HTTP无状态问题的机制，只是将历史数据保留在了服务器端，由服务器来管理</p>\n</blockquote>\n<p><strong>概念：</strong> 服务器和客户端直接维持状态的解决方案，有时也指这种解决方案的存储结构（与Cookie不同在于状态信息管理的位置不同，一个在服务器端，一个在客户端）</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>SessionId是全局的、唯一的</li>\n<li>一个客户对应一个SessionId</li>\n<li>Session在服务端器存储，管理</li>\n<li>Session是有生命周期的，会被产生，摧毁</li>\n</ul>\n<p><strong>机制：</strong></p>\n<p><img src=\"/2018/05/01/Session和Cookie/Session.png\" alt=\"Session\"></p>\n<blockquote>\n<p>References : <a href=\"https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/preface.md\" target=\"_blank\" rel=\"noopener\">https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/preface.md</a></p>\n</blockquote>\n<h2 id=\"3-Express-js配置Redis持久化存储Session会话\"><a href=\"#3-Express-js配置Redis持久化存储Session会话\" class=\"headerlink\" title=\"3. Express.js配置Redis持久化存储Session会话\"></a>3. Express.js配置Redis持久化存储Session会话</h2><blockquote>\n<p>References:</p>\n<p><a href=\"http://www.cnblogs.com/chyingp/p/express-session.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/chyingp/p/express-session.html</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000002630691\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000002630691</a></p>\n<p><a href=\"http://www.runoob.com/redis/redis-commands.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/redis/redis-commands.html</a></p>\n</blockquote>\n<p>Redis使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-server <span class=\"comment\"># 启动Redis服务器</span></span><br><span class=\"line\">redis-cli -h host -p port -a password <span class=\"comment\"># 连接本地redis服务</span></span><br><span class=\"line\"></span><br><span class=\"line\">config <span class=\"built_in\">set</span> requirepass password <span class=\"comment\"># 设置登录密码</span></span><br></pre></td></tr></table></figure>\n<p>Express.js配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> expressSession = <span class=\"built_in\">require</span>(<span class=\"string\">'express-session'</span>);  <span class=\"comment\">// 该中间件使得req有session属性</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> RedisStore = <span class=\"built_in\">require</span>(<span class=\"string\">'connect-redis'</span>)(expressSession);</span><br><span class=\"line\"><span class=\"keyword\">var</span> redisConfig=&#123;</span><br><span class=\"line\">    <span class=\"string\">'cookie'</span> : &#123;</span><br><span class=\"line\">       <span class=\"string\">'maxAge'</span> : <span class=\"number\">1800000</span> <span class=\"comment\">// 30 * 60 * 1000 ms = 30 mins</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">'sessionStore'</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">'host'</span> : <span class=\"string\">'127.0.0.1'</span>,</span><br><span class=\"line\">        <span class=\"string\">'port'</span> : <span class=\"string\">'6379'</span>,</span><br><span class=\"line\">        <span class=\"string\">'pass'</span> : <span class=\"string\">'password'</span>,</span><br><span class=\"line\">        <span class=\"string\">'db'</span> : <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"string\">'ttl'</span> : <span class=\"number\">1800</span>, <span class=\"comment\">// 30 * 60 sec = 30 mins</span></span><br><span class=\"line\">        <span class=\"string\">'logErrors'</span> : <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// var FileStore = require('session-file-store')(session);</span></span><br><span class=\"line\">app.use(expressSession(&#123;</span><br><span class=\"line\">    name : <span class=\"string\">'sid'</span>,</span><br><span class=\"line\">    secret : <span class=\"string\">'zhidan'</span>,  <span class=\"comment\">// 用来对session id相关的cookie进行签名</span></span><br><span class=\"line\">    resave : <span class=\"literal\">true</span>,</span><br><span class=\"line\">    rolling: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    saveUninitialized : <span class=\"literal\">false</span>,  <span class=\"comment\">// 是否自动保存未初始化的会话，建议false</span></span><br><span class=\"line\">    cookie : redisConfig.cookie,  <span class=\"comment\">// 是否每次都重新保存会话，建议false</span></span><br><span class=\"line\">    store : <span class=\"keyword\">new</span> RedisStore(redisConfig.sessionStore)  <span class=\"comment\">// Redis存储session（也可以选择其他store，比如FileStore()，本地文本存取，）</span></span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n<p>Session使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置Session</span></span><br><span class=\"line\">req.session.site = &#123;<span class=\"attr\">number</span>: <span class=\"string\">'110'</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 读取Session</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> number = req.session.number;</span><br></pre></td></tr></table></figure>\n"}