{"summary":"<h2 id=\"1-Nginx\"><a href=\"#1-Nginx\" class=\"headerlink\" title=\"1. Nginx\"></a>1. Nginx</h2><blockquote>\n<p>References from Wiki:</p>\n<p><strong>Nginx</strong> is a <a href=\"https://en.wikipedia.org/wiki/Web_server\" target=\"_blank\" rel=\"noopener\">web server</a> which can also be used as a <a href=\"https://en.wikipedia.org/wiki/Reverse_proxy\" target=\"_blank\" rel=\"noopener\">reverse proxy</a>, <a href=\"https://en.wikipedia.org/wiki/Load_balancer\" target=\"_blank\" rel=\"noopener\">load balancer</a> and <a href=\"https://en.wikipedia.org/wiki/HTTP_cache\" target=\"_blank\" rel=\"noopener\">HTTP cache</a>. </p>\n<p>Nginx是一个网页服务器，它可以作为反向代理，负载均衡，和HTTP缓存。在高连接并发的情况下，Nginx是Apache服务器不错的替代品。</p>\n</blockquote>\n<h2 id=\"2-安装Nginx\"><a href=\"#2-安装Nginx\" class=\"headerlink\" title=\"2. 安装Nginx\"></a>2. 安装Nginx</h2><blockquote>\n<p>两种安装方法：</p>\n<ol>\n<li>通过apt-get或yum安装别人预编译的二进制安装包安装</li>\n<li>源码编译安装</li>\n</ol>\n</blockquote>\n<h3 id=\"方式一：二进制安装包安装（推荐）\"><a href=\"#方式一：二进制安装包安装（推荐）\" class=\"headerlink\" title=\"方式一：二进制安装包安装（推荐）\"></a>方式一：二进制安装包安装（推荐）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install nginx</span><br><span class=\"line\">nginx -V <span class=\"comment\"># 查看版本</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 服务器配置路径：/etc/nginx/nginx.conf</span></span><br><span class=\"line\"><span class=\"comment\"># 程序路径：/usr/sbin</span></span><br></pre></td></tr></table></figure>\n<p>可能会需要遇到缺少模块的提示，使用apt-get命令安装缺失的模块，看提示，缺什么，补什么</p>\n<h3 id=\"方式二：编译安装（不推荐）\"><a href=\"#方式二：编译安装（不推荐）\" class=\"headerlink\" title=\"方式二：编译安装（不推荐）\"></a>方式二：编译安装（不推荐）</h3><blockquote>\n<p>References: </p>\n<p><a href=\"http://www.nginx.cn/install\" target=\"_blank\" rel=\"noopener\">http://www.nginx.cn/install</a></p>\n<p><a href=\"http://www.runoob.com/linux/nginx-install-setup.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/linux/nginx-install-setup.html</a></p>\n<p><a href=\"https://blog.csdn.net/u013140542/article/details/36070521\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/u013140542/article/details/36070521</a></p>\n</blockquote>\n<ol>\n<li>安装编译依赖</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install build-essential libtool gcc automake autoconf make g++ -y</span><br></pre></td></tr></table></figure>\n<ol>\n<li>选定源码目录（这里选择<code>/usr/local/src</code>）</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src</span><br></pre></td></tr></table></figure>\n<ol>\n<li>安装PCRE库（各个版本PCRE库：<a href=\"https://sourceforge.net/projects/pcre/files/pcre/），这里我用8.35版本\" target=\"_blank\" rel=\"noopener\">https://sourceforge.net/projects/pcre/files/pcre/），这里我用8.35版本</a></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># option1：二进制安装包</span></span><br><span class=\"line\">sudo apt-get install libpcre3 libpcre3-dev -y</span><br><span class=\"line\"><span class=\"comment\"># option2：源码编译安装</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src</span><br><span class=\"line\">wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</span><br><span class=\"line\">tar -zxvf pcre-8.35.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> pcre-8.35</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\">pcre-config --version <span class=\"comment\"># 检查PCRE版本</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>安装zlib库。<a href=\"http://zlib.net/zlib-1.2.8.tar.gz\" target=\"_blank\" rel=\"noopener\">http://zlib.net/zlib-1.2.8.tar.gz</a> 下载最新的 zlib 源码包，使用下面命令下载编译和安装 zlib包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># option1：系统自带</span></span><br><span class=\"line\"><span class=\"comment\"># option2：源码编译安装</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src</span><br><span class=\"line\">wget http://zlib.net/zlib-1.2.11.tar.gz</span><br><span class=\"line\">tar -zxvf zlib-1.2.11.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> zlib-1.2.11</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装SSL（有些服务器没有OpenSSL库，下载地址<a href=\"https://www.openssl.org/source）\" target=\"_blank\" rel=\"noopener\">https://www.openssl.org/source）</a></p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># option1：二进制安装包</span></span><br><span class=\"line\">sudo apt-get openssl libssl-dev libperl-dev -y</span><br><span class=\"line\">openssl version -a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># option2：源码安装</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src</span><br><span class=\"line\">wget https://www.openssl.org/<span class=\"built_in\">source</span>/openssl-1.0.1t.tar.gz</span><br><span class=\"line\">tar -zxvf openssl-1.0.1t.tar.gz</span><br></pre></td></tr></table></figure>\n<ol>\n<li>下载编译安装nginx（下载地址下载地址：<a href=\"http://nginx.org/download，这里选择1.6.2版本）\" target=\"_blank\" rel=\"noopener\">http://nginx.org/download，这里选择1.6.2版本）</a></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src</span><br><span class=\"line\">wget http://nginx.org/download/nginx-1.6.2.tar.gz</span><br><span class=\"line\">tar zxvf nginx-1.6.2.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.6.2</span><br><span class=\"line\"></span><br><span class=\"line\">./configure --prefix=/usr/<span class=\"built_in\">local</span>/webserver/nginx --with-http_stub_status_module --with-http_ssl_module <span class=\"comment\"># --with-openssl=openssl</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># configure其他安装配置：</span></span><br><span class=\"line\"><span class=\"comment\"># ./configure --sbin-path=/usr/local/nginx/nginx \\</span></span><br><span class=\"line\"><span class=\"comment\"># --conf-path=/usr/local/nginx/nginx.conf \\</span></span><br><span class=\"line\"><span class=\"comment\"># --pid-path=/usr/local/nginx/nginx.pid \\</span></span><br><span class=\"line\"><span class=\"comment\"># --with-http_ssl_module \\</span></span><br><span class=\"line\"><span class=\"comment\"># --with-pcre=/usr/local/src/pcre-8.37 \\</span></span><br><span class=\"line\"><span class=\"comment\"># --with-zlib=/usr/local/src/zlib-1.2.8 \\</span></span><br><span class=\"line\"><span class=\"comment\"># --with-openssl=/usr/local/src/openssl-1.0.1t</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<ol>\n<li>安装结果</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Configuration summary</span><br><span class=\"line\">  + using PCRE library: /usr/<span class=\"built_in\">local</span>/src/pcre-8.35</span><br><span class=\"line\">  + using OpenSSL library: /usr/<span class=\"built_in\">local</span>/src/openssl-1.0.1</span><br><span class=\"line\">  + md5: using OpenSSL library</span><br><span class=\"line\">  + sha1: using OpenSSL library</span><br><span class=\"line\">  + using system zlib library</span><br><span class=\"line\"></span><br><span class=\"line\">  nginx path prefix: <span class=\"string\">\"/usr/local/webserver/nginx\"</span></span><br><span class=\"line\">  nginx binary file: <span class=\"string\">\"/usr/local/webserver/nginx/sbin/nginx\"</span></span><br><span class=\"line\">  nginx configuration prefix: <span class=\"string\">\"/usr/local/webserver/nginx/conf\"</span></span><br><span class=\"line\">  nginx configuration file: <span class=\"string\">\"/usr/local/webserver/nginx/conf/nginx.conf\"</span></span><br><span class=\"line\">  nginx pid file: <span class=\"string\">\"/usr/local/webserver/nginx/logs/nginx.pid\"</span></span><br><span class=\"line\">  nginx error <span class=\"built_in\">log</span> file: <span class=\"string\">\"/usr/local/webserver/nginx/logs/error.log\"</span></span><br><span class=\"line\">  nginx http access <span class=\"built_in\">log</span> file: <span class=\"string\">\"/usr/local/webserver/nginx/logs/access.log\"</span></span><br><span class=\"line\">  nginx http client request body temporary files: <span class=\"string\">\"client_body_temp\"</span></span><br><span class=\"line\">  nginx http proxy temporary files: <span class=\"string\">\"proxy_temp\"</span></span><br><span class=\"line\">  nginx http fastcgi temporary files: <span class=\"string\">\"fastcgi_temp\"</span></span><br><span class=\"line\">  nginx http uwsgi temporary files: <span class=\"string\">\"uwsgi_temp\"</span></span><br><span class=\"line\">  nginx http scgi temporary files: <span class=\"string\">\"scgi_temp\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-Nginx使用\"><a href=\"#3-Nginx使用\" class=\"headerlink\" title=\"3. Nginx使用\"></a>3. Nginx使用</h2><blockquote>\n<p>References: <a href=\"http://www.nginx.cn/76.html\" target=\"_blank\" rel=\"noopener\">http://www.nginx.cn/76.html</a></p>\n</blockquote>\n<ul>\n<li>常用命令</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx <span class=\"comment\"># 开启服务器</span></span><br><span class=\"line\"></span><br><span class=\"line\">ps -ef | grep nginx  <span class=\"comment\"># 查看nginx进程否在运行</span></span><br><span class=\"line\"></span><br><span class=\"line\">nginx -s stop  <span class=\"comment\"># 传递中断信号</span></span><br><span class=\"line\">nginx -s reload  <span class=\"comment\"># 传递重启信号</span></span><br><span class=\"line\"></span><br><span class=\"line\">vi /etc/nginx/nginx.conf  <span class=\"comment\"># 编辑配置</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>配置说明（/etc/nginx/nginx.conf）</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#运行用户</span></span><br><span class=\"line\"><span class=\"attribute\">user</span> nobody;</span><br><span class=\"line\"><span class=\"comment\">#启动进程,通常设置成和cpu的数量相等</span></span><br><span class=\"line\"><span class=\"attribute\">worker_processes</span>  <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#全局错误日志及PID文件</span></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log;</span></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log  notice;</span></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log  info;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#pid        logs/nginx.pid;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#工作模式及连接数上限</span></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">#epoll是多路复用IO(I/O Multiplexing)中的一种方式,</span></span><br><span class=\"line\">    <span class=\"comment\">#仅用于linux2.6以上内核,可以大大提高nginx的性能</span></span><br><span class=\"line\">    <span class=\"attribute\">use</span>   <span class=\"literal\">epoll</span>; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#单个后台worker process进程的最大并发链接数    </span></span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span>  <span class=\"number\">1024</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 并发总数是 worker_processes 和 worker_connections 的乘积</span></span><br><span class=\"line\">    <span class=\"comment\"># 即 max_clients = worker_processes * worker_connections</span></span><br><span class=\"line\">    <span class=\"comment\"># 在设置了反向代理的情况下，max_clients = worker_processes * worker_connections / 4  为什么</span></span><br><span class=\"line\">    <span class=\"comment\"># 为什么上面反向代理要除以4，应该说是一个经验值</span></span><br><span class=\"line\">    <span class=\"comment\"># 根据以上条件，正常情况下的Nginx Server可以应付的最大连接数为：4 * 8000 = 32000</span></span><br><span class=\"line\">    <span class=\"comment\"># worker_connections 值的设置跟物理内存大小有关</span></span><br><span class=\"line\">    <span class=\"comment\"># 因为并发受IO约束，max_clients的值须小于系统可以打开的最大文件数</span></span><br><span class=\"line\">    <span class=\"comment\"># 而系统可以打开的最大文件数和内存大小成正比，一般1GB内存的机器上可以打开的文件数大约是10万左右</span></span><br><span class=\"line\">    <span class=\"comment\"># 我们来看看360M内存的VPS可以打开的文件句柄数是多少：</span></span><br><span class=\"line\">    <span class=\"comment\"># $ cat /proc/sys/fs/file-max</span></span><br><span class=\"line\">    <span class=\"comment\"># 输出 34336</span></span><br><span class=\"line\">    <span class=\"comment\"># 32000 &lt; 34336，即并发连接总数小于系统可以打开的文件句柄总数，这样就在操作系统可以承受的范围之内</span></span><br><span class=\"line\">    <span class=\"comment\"># 所以，worker_connections 的值需根据 worker_processes 进程数目和系统可以打开的最大文件总数进行适当地进行设置</span></span><br><span class=\"line\">    <span class=\"comment\"># 使得并发总数小于操作系统可以打开的最大文件数目</span></span><br><span class=\"line\">    <span class=\"comment\"># 其实质也就是根据主机的物理CPU和内存进行配置</span></span><br><span class=\"line\">    <span class=\"comment\"># 当然，理论上的并发总数可能会和实际有所偏差，因为主机还有其他的工作进程需要消耗系统资源。</span></span><br><span class=\"line\">    <span class=\"comment\"># ulimit -SHn 65535</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">#设定mime类型,类型由mime.type文件定义</span></span><br><span class=\"line\">    <span class=\"attribute\">include</span>    mime.types;</span><br><span class=\"line\">    <span class=\"attribute\">default_type</span>  application/octet-stream;</span><br><span class=\"line\">    <span class=\"comment\">#设定日志格式</span></span><br><span class=\"line\">    <span class=\"attribute\">log_format</span>  main  <span class=\"string\">'<span class=\"variable\">$remote_addr</span> - <span class=\"variable\">$remote_user</span> [<span class=\"variable\">$time_local</span>] \"<span class=\"variable\">$request</span>\" '</span></span><br><span class=\"line\">                      <span class=\"string\">'<span class=\"variable\">$status</span> <span class=\"variable\">$body_bytes_sent</span> \"<span class=\"variable\">$http_referer</span>\" '</span></span><br><span class=\"line\">                      <span class=\"string\">'\"<span class=\"variable\">$http_user_agent</span>\" \"<span class=\"variable\">$http_x_forwarded_for</span>\"'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">access_log</span>  logs/access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，</span></span><br><span class=\"line\">    <span class=\"comment\">#对于普通应用，必须设为 on,</span></span><br><span class=\"line\">    <span class=\"comment\">#如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，</span></span><br><span class=\"line\">    <span class=\"comment\">#以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span></span><br><span class=\"line\">    <span class=\"attribute\">sendfile</span>     <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"comment\">#tcp_nopush     on;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#连接超时时间</span></span><br><span class=\"line\">    <span class=\"comment\">#keepalive_timeout  0;</span></span><br><span class=\"line\">    <span class=\"attribute\">keepalive_timeout</span>  <span class=\"number\">65</span>;</span><br><span class=\"line\">    <span class=\"attribute\">tcp_nodelay</span>     <span class=\"literal\">on</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#开启gzip压缩</span></span><br><span class=\"line\">    <span class=\"attribute\">gzip</span>  <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_disable</span> <span class=\"string\">\"MSIE [1-6].\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#设定请求缓冲</span></span><br><span class=\"line\">    <span class=\"attribute\">client_header_buffer_size</span>    <span class=\"number\">128k</span>;</span><br><span class=\"line\">    <span class=\"attribute\">large_client_header_buffers</span>  <span class=\"number\">4</span> <span class=\"number\">128k</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#设定虚拟主机配置</span></span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">#侦听80端口</span></span><br><span class=\"line\">        <span class=\"attribute\">listen</span>    <span class=\"number\">80</span>;</span><br><span class=\"line\">        <span class=\"comment\">#定义使用 www.nginx.cn访问</span></span><br><span class=\"line\">        <span class=\"attribute\">server_name</span>  www.nginx.cn;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#定义服务器的默认网站根目录位置</span></span><br><span class=\"line\">        <span class=\"attribute\">root</span> html;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#设定本虚拟主机的访问日志</span></span><br><span class=\"line\">        <span class=\"attribute\">access_log</span>  logs/nginx.access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#默认请求</span></span><br><span class=\"line\">        <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">#定义首页索引文件的名称</span></span><br><span class=\"line\">            <span class=\"attribute\">index</span> index.php index.html index.htm;   </span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 定义错误提示页面</span></span><br><span class=\"line\">        <span class=\"attribute\">error_page</span>   <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span> /50x.html;</span><br><span class=\"line\">        <span class=\"attribute\">location</span> = /50x.html &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#静态文件，nginx自己处理</span></span><br><span class=\"line\">        <span class=\"attribute\">location</span> <span class=\"regexp\">~ ^/(images|javascript|js|css|flash|media|static)/</span> &#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">#过期30天，静态文件不怎么更新，过期可以设大一点，</span></span><br><span class=\"line\">            <span class=\"comment\">#如果频繁更新，则可以设置得小一点。</span></span><br><span class=\"line\">            <span class=\"attribute\">expires</span> <span class=\"number\">30d</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI默认配置.</span></span><br><span class=\"line\">        <span class=\"attribute\">location</span> <span class=\"regexp\">~ .php$</span> &#123;</span><br><span class=\"line\">            <span class=\"attribute\">fastcgi_pass</span> <span class=\"number\">127.0.0.1:9000</span>;</span><br><span class=\"line\">            <span class=\"attribute\">fastcgi_index</span> index.php;</span><br><span class=\"line\">            <span class=\"attribute\">fastcgi_param</span>  SCRIPT_FILENAME  <span class=\"variable\">$document_root</span><span class=\"variable\">$fastcgi_script_name</span>;</span><br><span class=\"line\">            <span class=\"attribute\">include</span> fastcgi_params;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#禁止访问 .htxxx 文件</span></span><br><span class=\"line\">            <span class=\"attribute\">location</span> <span class=\"regexp\">~ /.ht</span> &#123;</span><br><span class=\"line\">            <span class=\"attribute\">deny</span> all;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Nginx配置HTTPS支持\"><a href=\"#4-Nginx配置HTTPS支持\" class=\"headerlink\" title=\"4. Nginx配置HTTPS支持\"></a>4. Nginx配置HTTPS支持</h2><blockquote>\n<p>References: </p>\n<p><a href=\"https://segmentfault.com/a/1190000002866627\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000002866627</a></p>\n<p><a href=\"https://www.jianshu.com/p/9523d888cf77\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/9523d888cf77</a></p>\n</blockquote>\n<ol>\n<li><strong>HTTP和HTTPS</strong></li>\n</ol>\n<blockquote>\n<p>HTTP是明文传输，为了增强可靠性，提出了SSL加密协议，进而变成HTTPS（Hyper Text Transfer Protocol over Secure Socket Layer），即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。SSL依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密。TLS相当于SSL的继承者。</p>\n<p><a href=\"https://segmentfault.com/a/1190000002554673\" target=\"_blank\" rel=\"noopener\">SSL和TLS概念</a></p>\n</blockquote>\n<ol>\n<li><strong>导入证书</strong></li>\n</ol>\n<p>由HTTPS的概念可知：Nginx实现HTTPS需要到CA获取证书，然后在Nginx中配置SSL，添加证书和密钥。</p>\n<blockquote>\n<p><em>（如果你是找一个知名的ssl证书颁发机构如VeriSign、Wosign、StartSSL签发的证书，浏览器已经内置并信任了这些根证书，如果你是自建C或获得二级CA授权，都需要将CA证书添加到浏览器，这样在访问站点时才不会显示不安全连接。）</em></p>\n</blockquote>\n<p>我发现腾讯云域名可以免费申请SSL证书，所以就直接用腾讯云域名申请了SSL证书👇（首先要有个腾讯云账号）</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>1. 选择域名免费版</th>\n<th><img src=\"/2018/05/01/Nginx/Screen Shot 2018-05-01 at 8.57.50 PM.png\" alt=\"Screen Shot 2018-05-01 at 8.57.50 PM\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>2. 填写域名申请邮箱</strong></td>\n<td><img src=\"/2018/05/01/Nginx/Screen Shot 2018-05-01 at 8.58.07 PM.png\" alt=\"Screen Shot 2018-05-01 at 8.58.07 PM\"></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>当证书申请通过之后，就会收到邮件和短信提醒，则可以到腾讯云证书管理主页下载证书，然后上传到服务器。</p>\n<ol>\n<li><strong>Nginx配置SSL认证</strong></li>\n</ol>\n<p>先检查一下Nginx是否支持SSL（第三行 TLS…enabled 就说明支持）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nginx -V</span><br><span class=\"line\">nginx version: nginx/1.10.3</span><br><span class=\"line\">built with OpenSSL 1.1.0f  25 May 2017</span><br><span class=\"line\">TLS SNI support enabled</span><br></pre></td></tr></table></figure>\n<p>Nginx配置SSL有三种方式：</p>\n<ul>\n<li>全站SSL，指整个网站的所有页面都通过https访问</li>\n<li>部分页面SSL，指部分页面通过https访问</li>\n<li>双向SSL认证，上面的方法是用于认证服务端身份的，而没有认证客户端的身份，双向SSL认证则能够做到客户端身份的认证</li>\n</ul>\n<blockquote>\n<p>本文借鉴全站SSL的方式</p>\n<p>摘自：<a href=\"https://segmentfault.com/a/1190000002866627\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000002866627</a></p>\n</blockquote>\n<p>全站做ssl是最常见的一个使用场景，默认端口443，而且一般是单向认证。</p>\n<p>下面是通过修改Nginx的conf文件，实现SSL认证配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 443;</span><br><span class=\"line\">        server_name example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">        root /apps/www;</span><br><span class=\"line\">        index index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">        ssl on;</span><br><span class=\"line\">        ssl_certificate ../SSL/ittest.pem;</span><br><span class=\"line\">        ssl_certificate_key ../SSL/ittest.key;</span><br><span class=\"line\"></span><br><span class=\"line\">#        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\">#        ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;</span><br><span class=\"line\">#        ssl_prefer_server_ciphers on;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果想把http的请求强制转到https的话：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">  listen      80;</span><br><span class=\"line\">  server_name example.me;</span><br><span class=\"line\">  rewrite     ^   https://$server_name$request_uri? permanent;</span><br><span class=\"line\"></span><br><span class=\"line\">### 使用return的效率会更高 </span><br><span class=\"line\">#  return 301 https://$server_name$request_uri;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>ssl_certificate</code>证书其实是个公钥，它会被发送到连接服务器的每个客户端，<code>ssl_certificate_key</code>私钥是用来解密的，所以它的权限要得到保护但nginx的主进程能够读取。当然私钥和证书可以放在一个证书文件中，这种方式也只有公钥证书才发送到client。</p>\n<p><code>ssl_protocols</code>指令用于启动特定的加密协议，nginx在1.1.13和1.0.12版本后默认是<code>ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2</code>，TLSv1.1与TLSv1.2要确保OpenSSL &gt;= 1.0.1 ，SSLv3 现在还有很多地方在用但有不少被攻击的漏洞。</p>\n<p><code>ssl_ciphers</code>选择加密套件，不同的浏览器所支持的套件（和顺序）可能会不同。这里指定的是OpenSSL库能够识别的写法，你可以通过 <code>openssl -v cipher &#39;RC4:HIGH:!aNULL:!MD5&#39;</code>（后面是你所指定的套件加密算法） 来看所支持算法。</p>\n<p><code>ssl_prefer_server_ciphers on</code>设置协商加密算法时，优先使用我们服务端的加密套件，而不是客户端浏览器的加密套件。</p>\n<ol>\n<li><strong>https优化参数</strong></li>\n</ol>\n<ul>\n<li><code>ssl_session_cache shared:SSL:10m;</code> : 设置ssl/tls会话缓存的类型和大小。如果设置了这个参数一般是<code>shared</code>，<code>buildin</code>可能会参数内存碎片，默认是<code>none</code>，和<code>off</code>差不多，停用缓存。如<code>shared:SSL:10m</code>表示我所有的nginx工作进程共享ssl会话缓存，官网介绍说1M可以存放约4000个sessions。 详细参考serverfault上的问答<a href=\"http://serverfault.com/questions/695258/when-shoud-i-use-ssl-session-cache-paramter-in-nginx-ssl-settings\" target=\"_blank\" rel=\"noopener\">ssl_session_cache</a>。</li>\n<li><code>ssl_session_timeout</code> ： 客户端可以重用会话缓存中ssl参数的过期时间，内网系统默认5分钟太短了，可以设成<code>30m</code>即30分钟甚至<code>4h</code>。</li>\n</ul>\n<p>设置较长的<code>keepalive_timeout</code>也可以减少请求ssl会话协商的开销，但同时得考虑线程的并发数了。</p>\n<p><strong>提示</strong>：在生成证书请求csr文件时，如果输入了密码，nginx每次启动时都会提示输入这个密码，可以使用私钥来生成解密后的key来代替，效果是一样的，达到免密码重启的效果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl rsa -in ittest.key -out ittest_unsecure.key</span><br></pre></td></tr></table></figure>\n<ol>\n<li><strong>可能出现的错误：403 Forbidden</strong></li>\n</ol>\n<p>我出现了这个问题，原因是自己的server里面的root设置成’/‘，没有权限访问，所以就被禁了。</p>\n"}